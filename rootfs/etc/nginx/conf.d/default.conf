server {
    listen 8080;
    listen [::]:8080;

    root /opt/cgit/app;
    try_files $uri @cgit;

    # Health check endpoint
    location = /healthz {
        access_log off;
        return 200 'OK';
        add_header Content-Type text/plain;
    }

    # Serve static files
    location ~* \.(css|png|ico)$ {
        root /opt/cgit/app;
        expires 30d;
    }

    include          default.conf;

    location @cgit {
        # Known to be problematic bots
        # Block archive.org bots by User-Agent or Via header  
        if ($http_user_agent ~* "archive\.org_bot") {  
            return 403;  
        }  

        if ($http_user_agent ~* "Wayback Machine") {  
            return 403;  
        }  

        if ($http_via ~* "archive\.org_bot") {  
            return 403;  
        }  

        include          cgit.conf;
        include          fastcgi_params;
        fastcgi_param    SCRIPT_FILENAME /opt/cgit/app/cgit.cgi;
        fastcgi_pass     unix:/run/fcgiwrap/fcgiwrap.sock;

        fastcgi_param    PATH_INFO    $uri;
        fastcgi_param    QUERY_STRING $args;
        fastcgi_param    HTTP_HOST    $http_host;

        # Increase timeouts
        fastcgi_read_timeout 300s;   # Default is 60s
        fastcgi_send_timeout 300s;   # Default is 60s
        fastcgi_connect_timeout 300s; # Default is 60s

        if ($arg_service = git-receive-pack) {
            rewrite (/.*) @git_write/$1 last;
        }

        if ($uri ~ ^/.*/git-receive-pack$) {
            rewrite (/.*) @git_write/$1 last;
        }

        if ($arg_service = git-upload-pack) {
            rewrite (/.*) @git_read/$1 last;
        }

        if ($uri ~ ^/.*/git-upload-pack$) {
            rewrite (/.*) @git_read/$1 last;
        }
    }

    location ~ @git_read/(.*) {
        include git-http-backend_read.conf;
        include git-http-backend.conf;
    }

    location ~ @git_write/(.*) {
        include git-http-backend_write.conf;
        include git-http-backend.conf;
    }
}
